// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Pomelo.EntityFrameworkCore.MySql.Scaffolding.Internal;

namespace Recibo.Models;

public partial class recibos_dbContext : DbContext
{
    public recibos_dbContext()
    {
    }

    public recibos_dbContext(DbContextOptions<recibos_dbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Ato> Atos { get; set; }

    public virtual DbSet<ReciboDefinitivo> Recibos { get; set; }

    public virtual DbSet<ReciboAto> ReciboAtos { get; set; }

    public virtual DbSet<ReciboProvisorioAto> ReciboProvisorioAtos { get; set; }

    public virtual DbSet<ReciboProvisorio> RecibosProvisorios { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseMySql("server=localhost;port=3307;database=recibos_db;uid=root;pwd=secret", Microsoft.EntityFrameworkCore.ServerVersion.Parse("8.0.39-mysql"));

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_0900_ai_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<Ato>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.Property(e => e.Nome).IsFixedLength();
        });

        modelBuilder.Entity<ReciboDefinitivo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.Property(e => e.Data).HasDefaultValueSql("CURRENT_TIMESTAMP");

            entity.HasOne(d => d.ReciboProvisorio).WithMany(p => p.Recibos).HasConstraintName("recibos_ibfk_1");
        });

        modelBuilder.Entity<ReciboAto>(entity =>
        {
            entity.HasKey(e => new { e.ReciboId, e.AtoId })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.HasOne(d => d.Ato).WithMany(p => p.ReciboAtos).HasConstraintName("recibo_atos_ibfk_2");

            entity.HasOne(d => d.Recibo).WithMany(p => p.ReciboAtos).HasConstraintName("recibo_atos_ibfk_1");
        });

        modelBuilder.Entity<ReciboProvisorioAto>(entity =>
        {
            entity.HasKey(e => new { e.ReciboProvisorioId, e.AtoId })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.HasOne(d => d.Ato).WithMany(p => p.ReciboProvisorioAtos).HasConstraintName("recibo_provisorio_atos_ibfk_2");

            entity.HasOne(d => d.ReciboProvisorio).WithMany(p => p.ReciboProvisorioAtos).HasConstraintName("recibo_provisorio_atos_ibfk_1");
        });

        modelBuilder.Entity<ReciboProvisorio>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.Property(e => e.Data).HasDefaultValueSql("CURRENT_TIMESTAMP");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}